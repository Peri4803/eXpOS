alias functionNum R1;

if(functionNum==3)then
multipush(R0,R1,R2,R3);
R1=8;
R2=[SYSTEM_STATUS_TABLE+1];
call MOD_0;
multipop(R0,R1,R2,R3);
print R3;
multipush(R0,R1,R2,R3);
R1=9;
R2=[SYSTEM_STATUS_TABLE+1];
call MOD_0;
multipop(R0,R1,R2,R3);
return;
endif;

if(functionNum==4)then
multipush(R0,R1,R2,R3);
R1=8;
R2=[SYSTEM_STATUS_TABLE+1];
call MOD_0;
multipop(R0,R1,R2,R3);
read;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4]= WAIT_TERMINAL;
multipush(R0,R1,R2,R3);
call MOD_5;
multipop(R0,R1,R2,R3);
[[PTBR + 2 * ((R3) / 512)] * 512 + ((R3) % 512)]=[PROCESS_TABLE+R2*16+8];
return;
endif;

if(functionNum==2) then
alias pid R2;
alias page_no R3;
alias block_no R4;

multipush(R0,R1,R2,R3,R4);
R1=3;
R2=[SYSTEM_STATUS_TABLE+1];
call MOD_0;
multipop(R0,R1,R2,R3,R4);

[DISK_STATUS_TABLE+1]=0;
[DISK_STATUS_TABLE+2]=page_no;
[DISK_STATUS_TABLE+3]=block_no;

load(page_no,block_no);
[PROCESS_TABLE+ pid*16 + 4]=WAIT_DISK;

multipush(R0,R1,R2,R3,R4);
call MOD_5;
multipop(R0,R1,R2,R3,R4);
return;
endif;

return;





